{"version":3,"sources":["actions/index.js","pages/Login.js","components/Header.js","components/Select.js","components/Table.js","components/Form.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/Index.js","index.js"],"names":["actionAddExpenses","exchangeRates","state","type","payload","Login","props","email","password","redirect","handleChange","bind","handleClick","target","name","value","this","setState","event","loginDispatch","preventDefault","to","className","src","alt","data-testid","onChange","placeholder","onClick","disabled","length","test","React","Component","connect","dispatch","Header","convertedExpenses","expenses","total","reduce","acumulator","currentValue","rates","currency","Number","ask","Math","round","converted","id","user","wallet","Select","option","label","htmlFor","map","item","key","Table","scope","index","description","tag","method","toFixed","Form","resetstate","fetchCurrency","addExpenses","currencyList","currencies","a","fetch","currencyFetch","json","currencyJSON","fetchExpense","currencyKeys","Object","keys","filter","Wallet","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","userReducer","action","walletReducer","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cf4b824.chunk.js","sourcesContent":["// Coloque aqui suas actions\nexport const SUBMIT_LOGIN = 'SUBMIT_LOGIN';\nexport const SUBMIT_WALLET = 'SUBMIT_WALLET';\nexport const ADD_CURRENCIES = 'ADD_CURRENCIES';\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\nexport const eating = 'Alimentação';\n\nexport const actionSubmitLogin = (payload) => ({\n  type: SUBMIT_LOGIN,\n  payload,\n});\n\nexport const actionSubmitWallet = (payload) => ({\n  type: SUBMIT_WALLET,\n  payload,\n});\n\nexport const actionAddCurrencies = (payload) => ({\n  type: ADD_CURRENCIES,\n  payload,\n});\n\nexport const actionAddExpenses = (exchangeRates, state) => ({\n  type: ADD_EXPENSES,\n  payload: {\n    ...state,\n    exchangeRates,\n  },\n});\n\nexport function fetchCurrencyAPI() {\n  return async (dispatch) => {\n    const currencyFetch = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const currencyJSON = await currencyFetch.json();\n    const currencyKeys = Object.keys(currencyJSON);\n    const currencyList = currencyKeys.filter((currency) => currency !== 'USDT');\n    dispatch(actionAddCurrencies(currencyList));\n  };\n}\n\nexport function fetchExpense(state) {\n  return async (dispatch) => {\n    const currencyFetch = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const currencyJSON = await currencyFetch.json();\n    dispatch(actionAddExpenses(currencyJSON, state));\n  };\n}\n\nexport function converted(expenses) {\n  const total = expenses.reduce((acumulator, currentValue) => {\n    const rates = currentValue.exchangeRates[currentValue.currency];\n    return acumulator + Number(currentValue.value) * rates.ask;\n  }, 0);\n  return Math.round(total * 100) / 100;\n}\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { actionSubmitLogin } from '../actions/index';\nimport '../Css.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      redirect: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleClick(event) {\n    const { loginDispatch } = this.props;\n    const { email } = this.state;\n    event.preventDefault();\n    loginDispatch(email);\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { email, password, redirect } = this.state;\n    const regexValidation = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n    const passwordLength = 6;\n    if (redirect) return <Redirect to=\"/carteira\" />;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center align-items-center vh-100\">\n          <div\n            className=\"col-autom-auto p-4 border rounded px-5\n              shadow-lg bg-body rounded\"\n          >\n            <div className=\"row justify-content-center align-items-center\">\n              <img src=\"https://i.pinimg.com/originals/b0/b7/64/b0b76439e5cd5ef9bab27e83c4fdb2f2.gif\" alt=\"coingif\" className=\"w-25 p-3 mb-3\" />\n              <h3 className=\"text-center py-3\">TrybeWallet</h3>\n\n            </div>\n            <form>\n              <input\n                type=\"email\"\n                data-testid=\"email-input\"\n                name=\"email\"\n                onChange={ this.handleChange }\n                value={ email }\n                placeholder=\"Email\"\n                className=\"form-control mb- \"\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Senha\"\n                data-testid=\"password-input\"\n                name=\"password\"\n                value={ password }\n                onChange={ this.handleChange }\n                className=\"form-control mb-3\"\n              />\n              <div className=\"d-flex justify-content-around\">\n                <button\n                  type=\"button\"\n                  onClick={ this.handleClick }\n                  disabled={ password.length < passwordLength\n                || !regexValidation.test(email) }\n                  className=\"btn btn-success mx-3\"\n                >\n                  Entrar\n                </button>\n              </div>\n            </form>\n\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\nLogin.propTypes = {\n  loginDispatch: PropTypes.func.isRequired,\n};\nconst mapDispatchToProps = (dispatch) => ({\n  loginDispatch: (email) => dispatch(actionSubmitLogin(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { converted } from '../actions';\nimport '../Css.css';\n\nclass Header extends React.Component {\n  render() {\n    const { email, expenses } = this.props;\n    const convertedExpenses = converted(expenses);\n    return (\n      <header className=\"p-3  bg-dark text-white \">\n        <div className=\"d-flex justify-content-md-end ml-1 \">\n          <div className=\"ml-1 font-weight-bold\" data-testid=\"email-field\">\n            Email:\n            {' '}\n            { email }\n            {'  '}\n          </div>\n          <div className=\"ml-3\" data-testid=\"total-field\" id=\"valor\">\n            { convertedExpenses }\n          </div>\n          <div className=\"ml-2\" data-testid=\"header-currency-field\" id=\"valor\">\n            BRL\n          </div>\n\n        </div>\n      </header>\n    );\n  }\n}\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\nconst mapStateToProps = ({ user, wallet }) => ({\n  email: user.email,\n  expenses: wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Select extends Component {\n  render() {\n    const { option = [], onChange, name, label } = this.props;\n    return (\n      <div>\n        <label className=\"form-label\" htmlFor={ name }>\n          {' '}\n          {label}\n          <select\n            data-testid={ `${name}-input` }\n            id={ name }\n            name={ name }\n            onChange={ onChange }\n            className=\"form-select form-select-sm form-control\"\n          >\n            { option.map((item) => (\n              <option key={ item } value={ item }>{item}</option>\n            )) }\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  option: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component {\n  render() {\n    const { wallet } = this.props;\n    return (\n      <div>\n\n        <table className=\"table\">\n          <tr>\n            <th scope=\"col\">Descrição</th>\n            <th scope=\"col\">Tag</th>\n            <th scope=\"col\">Método de pagamento</th>\n            <th scope=\"col\">Valor</th>\n            <th scope=\"col\">Moeda</th>\n            <th scope=\"col\">Câmbio utilizado</th>\n            <th scope=\"col\">Valor convertido</th>\n            <th scope=\"col\">Moeda de conversão</th>\n            <th scope=\"col\">Editar/Excluir</th>\n          </tr>\n          { wallet.map((value, index) => (\n            <tr key={ index }>\n              <td>{ value.description }</td>\n              <td>{ value.tag }</td>\n              <td>{ value.method }</td>\n              <td>{ value.value }</td>\n              <td>{ value.exchangeRates[value.currency].name }</td>\n              <td>\n                { Number(value.exchangeRates[value.currency].ask).toFixed(2) }\n              </td>\n              <td>\n                { (Number(value.exchangeRates[value.currency].ask)\n              * Number(value.value)).toFixed(2) }\n              </td>\n              <td>Real</td>\n              <td>\n                <button\n                  data-testid=\"delete-btn\"\n                  type=\"button\"\n                  className=\"btn btn-danger mx-3\"\n                >\n                  Excluir\n                </button>\n              </td>\n            </tr>\n          ))}\n        </table>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  wallet: PropTypes.shape.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencyAPI, fetchExpense, eating } from '../actions/index';\nimport Select from './Select';\nimport Table from './Table';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: eating,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchCurrency } = this.props;\n    fetchCurrency();\n  }\n\n  resetstate =() => {\n    this.setState({\n      value: '',\n      currency: 'USD',\n      description: '',\n      method: 'GET',\n      tag: '',\n\n    });\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const { addExpenses } = this.props;\n    const { currency, description, method, tag, value } = this.state;\n    addExpenses({ currency, description, method, tag, value });\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: eating,\n    });\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencyList } = this.props;\n    const TAGS = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const paymentMethods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n\n    return (\n      <div className=\"mb-3\">\n        <form\n          className=\"d-flex justify-content-around\n        align-items-center bg-dark text-white p-2\"\n        >\n          <label htmlFor=\"value-input\" className=\"form-label\">\n            Valor:\n            <input\n              data-testid=\"value-input\"\n              id=\"value\"\n              name=\"value\"\n              onChange={ this.handleChange }\n              value={ value }\n              className=\"form-control\"\n              type=\"number\"\n            />\n          </label>\n\n          <label className=\"form-label\" htmlFor=\"description-input\">\n            Descrição\n            <input\n              data-testid=\"description-input\"\n              id=\"description\"\n              name=\"description\"\n              onChange={ this.handleChange }\n              type=\"text\"\n              value={ description }\n              className=\"form-control align-items-center \"\n            />\n          </label>\n          <div>\n            <Select\n              name=\"currency\"\n              option={ currencyList }\n              onChange={ this.handleChange }\n              value={ currency }\n              label=\"Moeda: \"\n            />\n          </div>\n          <div>\n            <Select\n              name=\"method\"\n              option={ paymentMethods }\n              onChange={ this.handleChange }\n              value={ method }\n              label=\"Método de pagamento: \"\n            />\n          </div>\n          <div>\n            <Select\n              name=\"tag\"\n              option={ TAGS }\n              onChange={ this.handleChange }\n              value={ tag }\n              label=\"Tag: \"\n            />\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mx-3 \"\n            onClick={ this.handleClick }\n          >\n            Adicionar Despesa\n          </button>\n        </form>\n        <Table />\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  addExpenses: PropTypes.func.isRequired,\n  fetchCurrency: PropTypes.func.isRequired,\n  currencyList: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\nconst mapDispatchToProps = (dispatch) => ({\n  addExpenses: (state) => dispatch(fetchExpense(state)),\n  fetchCurrency: () => dispatch(fetchCurrencyAPI()),\n});\nconst mapStateToProps = (state) => ({\n  currencyList: state.wallet.currencies,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport Header from '../components/Header';\nimport Form from '../components/Form';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n    </Switch>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SUBMIT_LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case SUBMIT_LOGIN:\n    return { ...state,\n      email: action.payload,\n      password: action.payload,\n    };\n  default:\n    return state;\n  }\n}\nexport default userReducer;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// import { SUBMIT_WALLET } from '../actions';\nimport { ADD_EXPENSES, ADD_CURRENCIES } from '../actions';\n\nconst INITIAL_STATE = {\n  expenses: [],\n  currencies: [],\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_EXPENSES: // reducer das despesas\n    return {\n      ...state,\n      expenses: [...state.expenses, { id: state.expenses.length, ...action.payload }],\n    };\n  case ADD_CURRENCIES: // reducer das moedas\n    return {\n      ...state,\n      currencies: [...action.payload],\n    };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","// import user from './user';\n// import wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/Index';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}